{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","sortByAlphabet","setState","ALPHABET","sortByLength","LENGTH","reverse","resetSort","this","goods","visibleGoods","sort","a","b","localeCompare","length","getReorderedGoods","className","type","onClick","map","item","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAyCE,IAAME,EAAb,4MACEC,MAAe,CACbC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,eAAiB,WACf,EAAKC,SAAS,CAAEH,SAAUL,EAASS,YAPvC,EAUEC,aAAe,WACb,EAAKF,SAAS,CAAEH,SAAUL,EAASW,UAXvC,EAcEC,QAAU,WACR,EAAKJ,UAAS,SAAAL,GACZ,MAAO,CACLC,YAAaD,EAAMC,gBAjB3B,EAsBES,UAAY,WACV,EAAKL,SAAS,CAAEH,SAAUL,EAASM,KAAMF,YAAY,KAvBzD,4CA0BE,WACE,MAAiCU,KAAKX,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdU,EA1DH,SACLA,EADK,GAGJ,IADCV,EACF,EADEA,SAAUD,EACZ,EADYA,WAERY,EAAY,YAAOD,GAkBvB,OAhBIV,IAAaL,EAASS,UACxBO,EAAaC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAG1Cd,IAAaL,EAASW,QACxBK,EAAaC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,UAGvChB,IAAaL,EAASM,OACxBU,EAAY,YAAOA,IAGjBZ,IACFY,EAAe,YAAIA,GAAcJ,WAG5BI,EAoCSM,CAAkBrB,EAAiBa,KAAKX,OAEtD,OACE,sBAAKoB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACET,KAAKX,MAAME,WAAaL,EAASS,SAC7B,iBACA,0BAENgB,QAASX,KAAKP,eAPhB,iCAYA,wBACEiB,KAAK,SACLD,UACET,KAAKX,MAAME,WAAaL,EAASW,OAC7B,oBACA,6BAENc,QAASX,KAAKJ,aAPhB,4BAYA,wBACEc,KAAK,SACLD,WACiB,IAAfnB,EACI,oBACA,6BAENqB,QAASX,KAAKF,QAPhB,sBAYEP,IAAaL,EAASM,MAAQF,IAC9B,wBACEoB,KAAK,SACLD,UAAU,4BACVE,QAASX,KAAKD,UAHhB,sBAUJ,6BACE,6BACGE,EAAMW,KAAI,SAAAC,GACT,OACE,oBAAe,UAAQ,OAAvB,SACGA,GADMA,iBApFzB,GAAyBC,IAAMC,WCvD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.612a8bd3.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  let visibleGoods = [...goods];\n\n  if (sortType === SortType.ALPHABET) {\n    visibleGoods.sort((a, b) => a.localeCompare(b));\n  }\n\n  if (sortType === SortType.LENGTH) {\n    visibleGoods.sort((a, b) => a.length - b.length);\n  }\n\n  if (sortType === SortType.NONE) {\n    visibleGoods = [...visibleGoods];\n  }\n\n  if (isReversed) {\n    visibleGoods = [...visibleGoods].reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortByAlphabet = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reverse = () => {\n    this.setState(state => {\n      return {\n        isReversed: !state.isReversed,\n      };\n    });\n  };\n\n  resetSort = () => {\n    this.setState({ sortType: SortType.NONE, isReversed: false });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const goods = getReorderedGoods(goodsFromServer, this.state);\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={\n              this.state.sortType === SortType.ALPHABET\n                ? 'button is-info'\n                : 'button is-info is-light'\n            }\n            onClick={this.sortByAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={\n              this.state.sortType === SortType.LENGTH\n                ? 'button is-success'\n                : 'button is-success is-light'\n            }\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={\n              isReversed === true\n                ? 'button is-warning'\n                : 'button is-warning is-light'\n            }\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {(sortType !== SortType.NONE || isReversed) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.resetSort}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {goods.map(item => {\n              return (\n                <li key={item} data-cy=\"Good\">\n                  {item}\n                </li>\n              );\n            })}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}